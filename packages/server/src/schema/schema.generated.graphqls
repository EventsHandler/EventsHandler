type Announces {
  createdAt: DateTime!
  description: String!
  event: Event!
  title: String!
}

scalar DateTime

type Event {
  address: String!
  announces: [Announces!]
  createdAt: DateTime!
  creator: User
  date: DateTime!
  description: String!
  id: ID!
  image: String!
  participants: [User!]
  title: String!
}

type Mutation {
  createEvent(description: String!, title: String!): Event!
  login(email: String!): User!
  register(email: String!, password: String!, username: String!): User!
  subscribe(postId: ID!): Event!
  testUpload(file: Upload!): String!
}

type Query {
  events: [Event!]!
}

scalar Upload

type User {
  createdAt: DateTime!
  createdEvents: [Event!]
  email: String!
  events: [Event!]
  id: ID!
  username: String!
}
