type Announces {
  createdAt: DateTime!
  description: String!
  event: Event
  title: String!
}

type Category {
  events: [Event!]
  id: ID!
  name: String!
}

scalar DateTime

type Event {
  address: String!
  announces: [Announces!]
  category: Category!
  createdAt: DateTime!
  creator: User!
  date: DateTime!
  description: String!
  id: ID!
  image: String!
  participants: [User!]
  title: String!
  userId: ID!
}

type Mutation {
  createAnnounce(description: String!, eventId: ID!, title: String!): Announces!
  createEvent(
    address: String!
    categoryName: String!
    date: DateTime!
    description: String!
    image: Upload!
    title: String!
  ): Event!
  login(email: String!): User!
  register(email: String!, password: String!, username: String!): User!
  subscribe(eventId: ID!): Event!
  testUpload(file: Upload!, test: String!): String!
}

type Query {
  categories: [Category!]
  event(eventId: ID!): Event
  events: [Event!]!
  me: User
  myEvents: [Event!]!
}

scalar Upload

type User {
  createdAt: DateTime!
  createdEvents: [Event!]
  email: String!
  events: [Event!]
  id: ID!
  username: String!
}
