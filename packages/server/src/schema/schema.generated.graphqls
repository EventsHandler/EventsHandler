type Announces {
  createdAt: DateTime!
  description: String!
  event: Event
  title: String!
}

type Category {
  events: [Event!]
  id: ID!
  name: String!
}

type Comment {
  comment: String
  event: Event!
  from: User!
}

scalar DateTime

type Event {
  address: String!
  announces: [Announces!]
  category: Category!
  comments: [Comment!]
  createdAt: DateTime!
  creator: User!
  date: DateTime!
  description: String!
  id: ID!
  image: String!
  participants: [User!]
  title: String!
  userId: ID!
}

type Mutation {
  apiTest(input: String!): String
  askForCategory(input: String!): String
  askForDescription(input: String!): String
  comment(comment: String!, eventId: String!, fromId: String!): Comment!
  createAnnounce(description: String!, eventId: ID!, title: String!): Announces!
  createEvent(
    address: String!
    categoryName: String!
    date: DateTime!
    description: String!
    image: Upload!
    title: String!
  ): Event!
  deleteEvent(eventId: ID!): Event
  editEvent(
    address: String!
    categoryName: String!
    date: DateTime!
    description: String!
    eventId: ID!
    image: Upload
    title: String!
  ): Event!
  login(password: String!, username: String!): User!
  rateUser(fromId: String!, rate: Int!, toId: String!): Boolean
  register(email: String!, password: String!, username: String!): User!
  subscribe(eventId: ID!): Event!
  testUpload(file: Upload!, test: String!): String!
  unsubscribe(eventId: ID!): Event!
}

type Query {
  categories: [Category!]
  event(eventId: ID!): Event
  events(category: String): [Event!]
<<<<<<< HEAD
  findByTitle(title: String!): Event!
=======
  findByCategory(category: String!): [Event!]
>>>>>>> test/cristi
  joinedEvents(userId: String): [Event!]
  me: User
  myEvents: [Event!]
  user(userId: String!): User
  users: [User!]
}

type Rateing {
  fromId: ID!
  rate: Int!
  toId: ID!
}

scalar Upload

type User {
  comments: [Comment!]
  createdAt: DateTime!
  createdEvents: [Event!]
  email: String!
  events: [Event!]
  id: ID!
  myRates: [Rateing!]
  password: String!
  rates: [Rateing!]
  username: String!
}
