scalar DateTime
scalar Upload

type Announces {
  title: String!
  description: String!
  event: Event
  createdAt: DateTime!
}

type Category {
  id: ID!
  name: String!
  events: [Event!]
}

type Event {
  id: ID!
  title: String!
  image: String!
  description: String!
  date: DateTime!
  address: String!
  createdAt: DateTime!
  userId: ID!

  creator: User!
  participants: [User!]
  announces: [Announces!]
  category: Category!
  comments: [Comment!]
}

type User {
  id: ID!
  username: String!
  password: String!
  email: String!
  createdAt: DateTime!

  createdEvents: [Event!]
  events: [Event!]

  rates: [Rateing!]
  myRates: [Rateing!]
  comments: [Comment!]
}

type Rateing {
  fromId: ID!
  toId: ID!
  rate: Int!
}

type Comment {
  from: User!
  event: Event!
  comment: String
}

extend type Query {
  events(category: String): [Event!]
  myEvents: [Event!]
  joinedEvents(userId: String): [Event!]
  event(eventId: ID!): Event
  me: User
  categories: [Category!]
  users(test: String!): [User!]
  user(userId: String!): User
  findByTitle(title: String!): Event!
}

extend type Mutation {
  login(username: String!, password: String!): User!
  register(username: String!, password: String!, email: String!): User!
  createEvent(
    title: String!
    description: String!
    date: DateTime!
    image: Upload!
    address: String!
    categoryName: String!
  ): Event!
  editEvent(
    title: String!
    description: String!
    date: DateTime!
    image: Upload
    address: String!
    categoryName: String!
    eventId: ID!
  ): Event!
  subscribe(eventId: ID!): Event!
  unsubscribe(eventId: ID!): Event!
  testUpload(file: Upload!, test: String!): String!
  createAnnounce(eventId: ID!, title: String!, description: String!): Announces!
  apiTest(input: String!): String
  deleteEvent(eventId: ID!): Event
  askForCategory(input: String!): String
  askForDescription(input: String!): String
  rateUser(fromId: String!, toId: String!, rate: Int!): Boolean
  comment(fromId: String!, eventId: String!, comment: String!): Comment!
}
