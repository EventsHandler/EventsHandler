// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// After Changes turn off the frontend and run "npx prisma migrate dev"
// To see DB and Tables in Docker use the following:
// psql postgresql://events:eventspwd@localhost:5432/events
// \dt - To view all the tables
// \d "Event" - To see the table "Event"
//  
// To turn off the pager use the following:
// \x off
// \pset pager off
// If you don't want to turn the pager off just type "q"

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(cuid(2))
  title       String
  image       String   @default("")
  description String   @default("")
  date        DateTime @default(now())
  address     String   @default("")

  createdAt DateTime @default(now())

  // m-1 for Event Creator
  userId  String
  creator User   @relation("CreatedEvents", fields: [userId], references: [id])

  // m-m: for Participants
  participants User[] @relation("EventParticipants")

  // 1-m for Anouncement
  announces Announce[] @relation("EventAnnounces")

  // m-1 for Category
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
}

model Announce {
  id          String   @id @default(cuid(2))
  title       String
  description String   @default("")
  createdAt   DateTime @default(now())

  // m-1 for Anouncement
  eventId String?
  event   Event?  @relation("EventAnnounces", fields: [eventId], references: [id])
}

model User {
  id        String   @id @default(cuid(2))
  username  String
  password  String
  email     String   @unique
  //birthDate DateTime
  createdAt DateTime @default(now())

  // 1-m for Event Creator
  createdEvents Event[] @relation("CreatedEvents")

  // m-m: for Participants
  events Event[] @relation("EventParticipants")
}

model Category {
  id   String @id @default(cuid(2))
  name String @unique

  // 1-m: for Participants
  events Event[]
}
